use SBOM::enums:ver<0.0.1>:auth<zef:lizmat> <
  Justification Response RiskMethodology Severity VulnerabilityState
>;

use SBOM::subsets:ver<0.0.1>:auth<zef:lizmat> <
  bom-ref PositiveInt referenceURL URL
>;

use SBOM::Attachment:ver<0.0.1>:auth<zef:lizmat>;
use SBOM::Contact:ver<0.0.1>:auth<zef:lizmat>;
use SBOM::Organization:ver<0.0.1>:auth<zef:lizmat>;
use SBOM::Property:ver<0.0.1>:auth<zef:lizmat>;
use SBOM::Source:ver<0.0.1>:auth<zef:lizmat>;
use SBOM::Tool:ver<0.0.1>:auth<zef:lizmat>;

#- Advisory --------------------------------------------------------------------
#| An advisory of a vulnerability.
class SBOM::Advisory:ver<0.0.1>:auth<zef:lizmat> {

#| An optional name of the advisory.
    has Str $.title;

#| Location where the advisory can be obtained.
    has URL $.url is required;
}

#- Analysis --------------------------------------------------------------------
#| An assessment of the impact and exploitability of a vulnerability.
class SBOM::Analysis:ver<0.0.1>:auth<zef:lizmat> {

#| Declares the current state of an occurrence of a vulnerability, after
#| automated or manual analysis.
    has VulnerabilityState $.state;

#| The rationale of why the impact analysis state was asserted.
    has Justification $.justification;

#| A response to the vulnerability by the manufacturer, supplier, or
#| project responsible for the affected component or service. More than
#| one response is allowed. Responses are strongly encouraged for
#| vulnerabilities where the analysis state is exploitable.
    has Response  $.response;

#| Detailed description of the impact including methods used during
#| assessment. If a vulnerability is not exploitable, this field should
#| include specific details on why the component or service is not
#| impacted by this vulnerability.
    has Str $.detail;

#| The date and time (timestamp) when the analysis was first issued.
    has DateTime $.firstIssued;

#| The date and time (timestamp) when the analysis was last updated.
    has DateTime $.lastUpdated;
}

#- Credits ---------------------------------------------------------------------
#| Individuals or organizations credited with the discovery of a
#| vulnerability.
class SBOM::Credits:ver<0.0.1>:auth<zef:lizmat> {

#| The organizations credited with vulnerability discovery.
    has SBOM::Organization @.organizations;

#| The individuals, not associated with organizations, that are
#| credited with vulnerability discovery.
    has SBOM::Contact @.individuals;
}

#- ProofOfConcept --------------------------------------------------------------
#| Evidence used to reproduce a vulnerability.
class SBOM::ProofOfConcept:ver<0.0.1>:auth<zef:lizmat> {

#| Precise steps to reproduce the vulnerability.
    has Str $.reproductionSteps;

#| A description of the environment in which reproduction was possible.
    has Str $.environment;

#| Supporting material that helps in reproducing or understanding how
#| reproduction is possible. This may include screenshots, payloads,
#| and PoC exploit code.
    has SBOM::Attachment @.supportingMaterial;
}

#- Rating ----------------------------------------------------------------------
#| Defines the severity or risk ratings of a vulnerability.
class SBOM::Rating:ver<0.0.1>:auth<zef:lizmat> {

#| The source that calculated the severity or risk rating of the
#| vulnerability.
    has SBOM::Source $.source;

#| The numerical score of the rating.
    has Rat $.score;

#| Textual representation of the severity that corresponds to the
#| numerical score of the rating.
    has Severity $.severity;

#| Specifies the severity or risk scoring methodology or standard used.
    has RiskMethodology $.method;

#| Textual representation of the metric values used to score the
#| vulnerability.
    has Str $.vector;

#| An optional reason for rating the vulnerability as it was.
    has Str $.justification;
}

#- SourceReference -------------------------------------------------------------
#| A reference to a source that published a vulnerability.
class SBOM::SourceReference:ver<0.0.1>:auth<zef:lizmat> {

#| An identifier that uniquely identifies the vulnerability.
    has Str $.id;

#| The source that published the vulnerability.
    has SBOM::Source $.source;
}

#- Vulnerability ---------------------------------------------------------------
#| A Vulnerability identified in components or services
class SBOM::Vulnerability:ver<0.0.1>:auth<zef:lizmat> {

#| An optional identifier which can be used to reference the
#| vulnerability elsewhere in the BOM.
    has bom-ref $.bom-ref;

#| The identifier that uniquely identifies the vulnerability.
    has Str $.id;

#| The source that published the vulnerability.
    has SBOM::Source $.source;

#| Zero or more pointers to vulnerabilities that are the equivalent of
#| the vulnerability specified. Often times, the same vulnerability may
#| exist in multiple sources of vulnerability intelligence, but have
#| different identifiers. References provide a way to correlate
#| vulnerabilities across multiple sources of vulnerability intelligence.
    has SBOM::SourceReference @.references;

#| List of vulnerability ratings.
    has SBOM::Rating @.ratings;

#| List of Common Weaknesses Enumerations (CWEs) codes that describes
#| this vulnerability.  For example 399 (of
#| https://cwe.mitre.org/data/definitions/399.html).
    has PositiveInt           @.cwes;

#| A description of the vulnerability as provided by the source.
    has Str $.description;

#| If available, an in-depth description of the vulnerability as
#| provided by the source organization. Details often include
# information useful in understanding root cause.
    has Str $.detail;

#| Recommendations of how the vulnerability can be remediated or
#| mitigated.
    has Str $.recommendation;

#| A bypass, usually temporary, of the vulnerability that reduces its
#| likelihood and/or impact. Workarounds often involve changes to
#| configuration or deployments.
    has Str $.workaround;

#| Evidence used to reproduce the vulnerability.
    has SBOM::ProofOfConcept $.proofOfConcept;

#| Published advisories of the vulnerability if provided.
    has SBOM::Advisory @.advisories;

#| The date and time (timestamp) when the vulnerability record was
#| created in the vulnerability database.
    has DateTime $.created;

#| The date and time (timestamp) when the vulnerability record was
#| first published.
    has DateTime $.published;

#| The date and time (timestamp) when the vulnerability record was
#| last updated.
    has DateTime $.updated;

#| The date and time (timestamp) when the vulnerability record was
#| rejected (if applicable).
    has DateTime $.rejected;

#| Individuals or organizations credited with the discovery of the
#| vulnerability.
    has SBOM::Credits $.credits;

#| The tool(s) used to identify, confirm, or score the vulnerability.
    has SBOM::AnyTool $.tools;

#| An assessment of the impact and exploitability of the vulnerability.
    has SBOM::Analysis $.analysis;

#| The components or services that are affected by the vulnerability.
    has referenceURL @.affects;

#| Any additional properties as name-value pairs.
    has SBOM::Property @.properties;
}

# vim: expandtab shiftwidth=4
