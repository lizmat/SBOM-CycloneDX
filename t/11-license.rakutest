use lib $*PROGRAM.parent;
use Test;
use SBOM::License;  # also provides SBOM::AnyLicense
use testers;

my @classes = SBOM::License, SBOM::AnyLicense;

plan 3 * @classes;

# Testing an object with a required arrays and a merge-type

my %complete =
  license => {
    bom-ref         => "license-1",
    id              => "0BSD",
    name            => "The BSD license",
    acknowledgement => "declared",
    text            => {
        contentType => "text/plain",
        content     => "An attachment",
    },
    url             => "https://raku.org",
    licensing       => {
      altIds => ("foo","bar"),
    },
    properties      => (
      {
        name  => "good",
        value => "42"
      },
      {
        name  => "bad",
        value => "666"
      },
    )
  }
;

test-hash-json $_, %complete, Q:to/JSON/, "$_.^name(): complete" for @classes;
{
  "license": {
    "bom-ref": "license-1",
    "id": "0BSD",
    "name": "The BSD license",
    "acknowledgement": "declared",
    "text": {
      "contentType": "text/plain",
      "content": "An attachment"
    },
    "url": "https://raku.org",
    "licensing": {
      "altIds": [
        "foo",
        "bar"
      ]
    },
    "properties": [
      {
        "name": "good",
        "value": "42"
      },
      {
        "name": "bad",
        "value": "666"
      }
    ]
  }
}
JSON

my %minimal = license => { id => "0BSD" };
;
test-hash-json $_, %minimal, Q:to/JSON/, "$_.^name(): minimal" for @classes;
{
  "license": {
    "id": "0BSD"
  }
}
JSON

dies-ok { .new(:raw-error) }, "$_.^name(): no args throws" for @classes;

# vim: expandtab shiftwidth=4
