use lib $*PROGRAM.parent;
use Test;
use SBOM::CycloneDX;
use testers;

my @classes = SBOM::SignatureSigners, SBOM::ValidSignature;

plan 3 * @classes;

# Basic Signature testing

my %complete =
  signers => (
    {
      algorithm =>  "ES256",
      value     => "6A77T3RBTAuVpZOgFFFfOvGOQ1hqMbfSQ91VucRM1RIP6QqX9kEF1Pi1_vCl37qpVzK51kIyppgUF_i9s999XA"
    },
    {
      algorithm =>  "ES256",
      value     => "lm6wx-elyBTbNMKNF8riooZhvrm6f5j8JpvgP9JtVv50dd7sXQLH7PqJcn9fmKV8eoF8cszPllEsQQhEQOM4hA"
    },
  )
;

test-hash-json $_, %complete, Q:to/JSON/, "$_.^name() complete" for @classes;
{
  "signers": [
    {
      "algorithm": "ES256",
      "value": "6A77T3RBTAuVpZOgFFFfOvGOQ1hqMbfSQ91VucRM1RIP6QqX9kEF1Pi1_vCl37qpVzK51kIyppgUF_i9s999XA"
    },
    {
      "algorithm": "ES256",
      "value": "lm6wx-elyBTbNMKNF8riooZhvrm6f5j8JpvgP9JtVv50dd7sXQLH7PqJcn9fmKV8eoF8cszPllEsQQhEQOM4hA"
    }
  ]
}
JSON

my %minimal =
  signers => (
    {
      algorithm =>  "ES256",
      value     => "6A77T3RBTAuVpZOgFFFfOvGOQ1hqMbfSQ91VucRM1RIP6QqX9kEF1Pi1_vCl37qpVzK51kIyppgUF_i9s999XA"
    },
  )
;
test-hash-json $_, %minimal, Q:to/JSON/, "$_.^name() minimal" for @classes;
{
  "signers": [
    {
      "algorithm": "ES256",
      "value": "6A77T3RBTAuVpZOgFFFfOvGOQ1hqMbfSQ91VucRM1RIP6QqX9kEF1Pi1_vCl37qpVzK51kIyppgUF_i9s999XA"
    }
  ]
}
JSON

is-deeply .new, Nil, "$_.^name(): No args return Nil" for @classes;

# vim: expandtab shiftwidth=4
